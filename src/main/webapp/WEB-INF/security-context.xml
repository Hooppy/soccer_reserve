<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd">
	
	<security:http pattern="/resources/**" security="none" />
	<security:http pattern="/resources/**/*.*" security="none" />
	
	<security:http auto-config="true" use-expressions="true">
		<security:intercept-url pattern="/index" access="permitAll" />
		<security:intercept-url pattern="/new" access="permitAll" />
    	<security:intercept-url pattern="/join" access="permitAll" />
    	<security:intercept-url pattern="/admin/**" access="hasAuthority('USER_MANAGER')" />
    	<security:intercept-url pattern="/login_success" access="hasRole('USER')" />
    	<security:intercept-url pattern="/**" access="hasRole('USER')" />
    	
    	<!-- 로그인 후 권한 없는 페이지 접근시 page 처리 -->
    	<!-- <security:access-denied-handler ref="accessDenied" /> -->
    	
    	<!-- form action과 login-processing-url을 동일하게 맞춰주면 spring security 탐 -->
   	 	<security:form-login 
   	 	username-parameter="username"
   	 	password-parameter="password"
   	 	login-page="/index"
   	 	login-processing-url="/login"
   	 	authentication-success-handler-ref="customAuthenticationSuccessHandler"
   	 	authentication-failure-handler-ref="customAuthenticationFailureHandler"
   	 	/>
   	 	
   	 	<!-- logout 실행 -->
    	<security:logout logout-url="/logout" success-handler-ref="logoutSuccessHandler" invalidate-session="true" />
	</security:http>

	<!-- login -->
	<bean id="customAuthenticationSuccessHandler" class="com.paul.security.handler.CustomAuthenticationSuccessHandler"></bean>
	<bean id="customAuthenticationFailureHandler" class="com.paul.security.handler.CustomAuthenticationFailureHandler"></bean>
	
	<!-- logout -->
	<bean id="logoutSuccessHandler" class="com.paul.security.handler.LogoutSuccessHandler"></bean>

	<bean id="customUserDetailsService" class="com.paul.security.CustomUserDetailsService"></bean>
 	<bean id="customAuthenticationProvider" class="com.paul.security.CustomAuthenticationProvider"></bean> 
 	
 	<!-- salt값 자동생성 -->
 	<bean id="passwordEncoder" class="org.springframework.security.crypto.password.StandardPasswordEncoder"></bean>
	
	<security:authentication-manager alias="authenticationManager">
	  <security:authentication-provider ref="customAuthenticationProvider">
	  </security:authentication-provider>
	  <security:authentication-provider user-service-ref="customUserDetailsService">
	     <security:password-encoder ref="passwordEncoder"></security:password-encoder>
	  </security:authentication-provider>
	</security:authentication-manager>
		
</beans>